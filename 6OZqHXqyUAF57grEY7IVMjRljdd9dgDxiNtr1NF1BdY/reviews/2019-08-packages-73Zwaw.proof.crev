-----BEGIN CREV PACKAGE REVIEW-----
version: -1
date: "2019-08-14T12:20:20.546463900-07:00"
from:
  id-type: crev
  id: 6OZqHXqyUAF57grEY7IVMjRljdd9dgDxiNtr1NF1BdY
  url: "https://github.com/MaulingMonkey/crev-proofs"
package:
  source: "https://crates.io"
  name: tempfile
  version: 3.1.0
  revision: 37e4bc0dab5b91bcf9fa8d449ded1cfe13148441
  digest: zZchJHrVvYvU064rqi1nM9EJec02iVTog44p19tNBZk
review:
  thoroughness: medium
  understanding: medium
  rating: positive
comment: |
  Solid crate overall.
  
  Concerns:
  * Absurdly high default `NUM_RETRIES` means this crate can hang.
  * Slightly unnecessarily large unsafe use, used once without clear need.
  * TempDir seems like a big footgun.
  * Well documented footguns with regards to share tmp dirs on some systems.
  * Hazard to reproducable builds thanks to random filename generation.
  
  Detail
  ======
  
  | File                                                  | Rating | Notes |
  | ----------------------------------------------------- | ------ | ----- |
  | src/file/imp/mod.rs                                   | +1    | |
  | src/file/imp/other.rs                                 | +1    | not_supported
  | [src/file/imp/unix.rs](#src/file/imp/unix.rs)         | +1    | `unsafe`, but sound.
  | [src/file/imp/windows.rs](#src/file/imp/windows.rs)   | +1    | `unsafe`, but sound.
  | [src/file/mod.rs](#src/file/mod.rs)                   | +1    | |
  | src/dir.rs                                            | +1    | |
  | src/error.rs                                          | +1    | |
  | [src/lib.rs](#src/lib.rs)                             | +1    | |
  | src/spooled.rs                                        | +1    | Could use a `.into_file()`
  | [src/util.rs](#src/util.rs)                           | 0     | `unsafe`, but sound.
  | tests/namedtempfile.rs                                | +1    | |
  | tests/spooled.rs                                      | +1    | |
  | tests/tempdir.rs                                      | +1    | |
  | tests/tempfile.rs                                     | +1    | |
  | .gitignore                                            | +1    | |
  | Cargo.toml                                            | +1    | |
  | Cargo.toml.orig                                       | +1    | |
  | LICENSE-APACHE                                        | +1    | |
  | LICENSE-MIT                                           | +1    | |
  | NEWS                                                  | +1    | |
  | README.&#8203;md                                      | +1    | |
  
  | Other     | Rating | Notes |
  | --------- | ------ | ----- |
  | unsafe    | 0     | Minor unnecessary/overlong unsafe blocks
  | fs        | 0     | Rationale of this entire crate
  | io        | +1    | All looks sane
  | docs      | +1    | Tons of doc comments
  | tests     | +1    | Lots of 'em
  
  src/file/imp/unix.rs
  --------------------
  | Line  | What  | Notes |
  | -----:| ----- | ----- |
  | 15    | cvt_err           | +1, verified error handling is correct vs online man pages for `rename` and `link`.
  | 25    | cvt_err           | +1
  | 30    | cstr              | +1
  | 35    | create_named      | +1
  | 44    | create_unlinked   | +1
  | 62    | create            | +1, sane flag use.
  | 79    | create            | +1
  | 83    | create_unix       | +1, minor hazard to reproducable builds due to random filenames
  | 93    | reopen            | +1
  | 107   | persist           | 0, `unsafe` larger than necessary, but sound.
  | 130   | persist           | 0, redox NYI but sane placeholder error
  | 135   | keep              | 0, nothing to do on unix
  
  src/file/imp/windows.rs
  -----------------------
  | Line  | What  | Notes |
  | -----:| ----- | ----- |
  | 19    | to_utf16          | +1, null terminates
  | 23    | create_named      | +1
  | 32    | create            | +1, minor hazard to reproducable builds due to random filenames
  | 50    | reopen            | +1, `unsafe` but sound.  Verified error handling vs MSDN.
  | 67    | keep              | +1, `unsafe` but sound.  Verified error handling vs MSDN.
  | 78    | persist           | 0, `unsafe` larger than necessary, but sound.  Verified error handling vs MSDN.
  
  src/file/mod.rs
  ---------------
  | Line  | What  | Notes |
  | -----:| ----- | ----- |
  | ...   | \*                | +1, well reviewed despite my lack of notes.
  | 587   | new_in            | +1, doc comment links wrong method (new_in instead of new)
  | ...   | \*                | +1, well reviewed despite my lack of notes.
  | 859   | into_file         | 0, confusing how to use these correctly as Drop still occurs
  | 867   | into_temp_path    | 0, confusing how to use these correctly as Drop still occurs
  | 876   | into_parts        | 0, confusing how to use these correctly as Drop still occurs
  | ...   | \*                | +1, well reviewed despite my lack of notes.
  
  src/lib.rs
  ----------
  | Line  | What  | Notes |
  | -----:| ----- | ----- |
  | ...   | \*                | +1, well reviewed despite my lack of notes.
  | 131   | NUM_RETRIES       | -1, absurdly large default value 1 &lt;&lt; 31, will hang "forever".
  | ...   | \*                | +1, well reviewed despite my lack of notes.
  
  src/util.rs
  -----------
  | Line  | What  | Notes |
  | -----:| ----- | ----- |
  | 9     | tmpname           | 0, `unsafe` for semi-pointless str::from_utf8_unchecked, but sound.  Reproducable builds hazard.
  | 26    | create_helper     | +1, although I'd pick a different error message.
  
  TIL
  ---
  ```rust
  let tmp;
  if cond {
      tmp = asdf;
      &tmp
  }
  ```
  ```rust
  fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
      f.debug_struct("TempDir")
          .field("path", &self.path())
          .finish()
  }
  ```
  * [std::io::Cursor](https://doc.rust-lang.org/std/io/struct.Cursor.html)
-----BEGIN CREV PACKAGE REVIEW SIGNATURE-----
ZbHAzPTt7Ig2nzQhvwJJ1DK4zVwLX_hKdMbTgFTVEM37-355Ywz1rXh00DNZrW_dX9avPsX7t335oHHXbM5RDA
-----END CREV PACKAGE REVIEW-----

-----BEGIN CREV PACKAGE REVIEW-----
version: -1
date: "2019-08-21T12:05:50.948153-07:00"
from:
  id-type: crev
  id: 6OZqHXqyUAF57grEY7IVMjRljdd9dgDxiNtr1NF1BdY
  url: "https://github.com/MaulingMonkey/crev-proofs"
package:
  source: "https://crates.io"
  name: require_unsafe_in_body
  version: 0.1.2
  revision: d56076d219ff2f06feaab3b64c7eb6c4b44682e5
  digest: TTHvIdZyrkO10MKWkxTZ2G0xRTvGK0jdFeQft1DJir4
review:
  thoroughness: medium
  understanding: low
  rating: positive
comment: |
  Seems solid, although my syn-fu is weak, limiting my ability to review this.
  
  Detail
  ======
  
  | File                                          | Rating | Notes |
  | --------------------------------------------- | ------ | ----- |
  | src/docs/require_unsafe_in_bodies.md          | +1 | |
  | src/docs/require_unsafe_in_body.md            | +1 | |
  | src/utils/macros.rs                           | +1 | |
  | src/utils/mod.rs                              | +1 | |
  | src/lib.rs                                    | +1 | understanding: low - I'm barely following along
  | src/tests.rs                                  | +1 | |
  | tests/ui/body_on_method_2.rs                  | +1 | |
  | tests/ui/body_on_method_2.stderr              | +1 | |
  | tests/ui/body_on_method.rs                    | +1 | |
  | tests/ui/body_on_method.stderr                | +1 | |
  | tests/ui/readme.rs                            | +1 | |
  | tests/ui/readme.stderr                        | +1 | |
  | tests/impl_method_2.rs                        | +1 | The cfgs on unit-tests look the wrong way around?
  | tests/impl_method.rs                          | +1 | The cfgs on unit-tests look the wrong way around?
  | tests/trait_default_method.rs                 | +1 | The cfgs on unit-tests look the wrong way around?
  | tests/ui.rs                                   | +1 | The cfgs on unit-tests look the wrong way around?
  | .cargo_vcs_info.json                          | +1 | |
  | .cargo-ok                                     | +1 | |
  | .gitignore                                    | +1 | |
  | Cargo.toml                                    | +1 | MIT
  | Cargo.toml.orig                               | +1 | MIT
  | LICENSE                                       | +1 | MIT
  | Makefile                                      | +1 | Unixy
  | README.md                                     | +1 | |
  
  | Other     | Rating | Notes |
  | --------- | ------ | ----- |
  | unsafe    | +1    | Wrangles unsafe but doesn't actually use it itself
  | fs        | +1    | None
  | io        | +1    | Modifies codegen through syn
  | docs      | +1    | |
  | tests     | +1    | |
  
  TIL
  ---
  ```rs
  let Struct { ref member, ref mut member2, .. } = to_destructure;
  ```
-----BEGIN CREV PACKAGE REVIEW SIGNATURE-----
ZIbkbDQtdYQJPeY8NS3cZmn8YNEJzUNTtQD4LKuMr7WYjJP_2Gl2sOvyQY98sYUtVYgGsfIbTURJ6X3AVbVSAw
-----END CREV PACKAGE REVIEW-----

-----BEGIN CREV PACKAGE REVIEW-----
version: -1
date: "2019-08-28T00:58:40.311347700-07:00"
from:
  id-type: crev
  id: 6OZqHXqyUAF57grEY7IVMjRljdd9dgDxiNtr1NF1BdY
  url: "https://github.com/MaulingMonkey/crev-proofs"
package:
  source: "https://crates.io"
  name: warmy
  version: 0.12.0
  revision: a1e2e8162f8bb9061b58cd66cfc0aaefebd0cbc7
  digest: WrTgwvpdKO6GHtzIY3FcEmEq4Ea_8UFRGAEyBkVvVl4
review:
  thoroughness: low
  understanding: low
  rating: positive
comment: |
  Looks good to me.  Some of the finer points are a little obtuse to me (RE: reloads, dependencies, an the inspect trait.)
  
  Detail
  ======
  
  | File                                          | Rating | Notes |
  | --------------------------------------------- | ------ | ----- |
  | examples/toml/hello.html                      | +1    | |
  | examples/toml/main.rs                         | +1    | |
  | src/context.rs                                | +1    | |
  | src/json.rs                                   | +1    | |
  | [src/key.rs](src/key.rs)                      | +1    | |
  | src/lib.rs                                    | +1    | |
  | src/load.rs                                   | +1    | |
  | src/res.rs                                    | +1    | |
  | src/toml.rs                                   | +1    | |
  | tests/lib.rs                                  | +1    | |
  | .cargo_vcs_info.json                          | +1    | |
  | .cargo-ok                                     | +1    | |
  | .gitignore                                    | +1    | |
  | .travis.yml                                   | +1    | |
  | Cargo.toml                                    | +1    | |
  | Cargo.toml.orig                               | +1    | |
  | CHANGELOG.md                                  | +1    | |
  | LICENSE                                       | +1    | |
  | README.md                                     | +1    | |
  | rustfmt.toml                                  | +1    | Ew 2 space indents gross
  
  | Other     | Rating | Notes |
  | --------- | ------ | ----- |
  | unsafe    | +1    | No unsafe code
  | fs        | +1    | Nothing fishy
  | io        | +1    | Nothing fishy
  | docs      | +1    | Good god there are a lot.  Needs more concrete motivating examples though.
  | tests     | +1    | |
  
  src/key.rs
  ----------
  | Line  | What  | Notes |
  | -----:| ----- | ----- |
  | 12    | Key   | `'static` lifetime... minor leak? but I probably don't care?
  
  TIL
  ---
  cargo-sync-readme
  cargo-outdated
-----BEGIN CREV PACKAGE REVIEW SIGNATURE-----
B9E2l1I0tMq4PXob9GWkYTWj7i4thnqKAdDRNMKFXHOjCrZrBrysPV05-097BUK3unufmde608VjGfyrTdnQBA
-----END CREV PACKAGE REVIEW-----

-----BEGIN CREV PACKAGE REVIEW-----
version: -1
date: "2019-08-30T09:03:24.412165200-07:00"
from:
  id-type: crev
  id: 6OZqHXqyUAF57grEY7IVMjRljdd9dgDxiNtr1NF1BdY
  url: "https://github.com/MaulingMonkey/crev-proofs"
package:
  source: "https://crates.io"
  name: void
  version: 1.0.2
  digest: mmRZ15GpboF6sor0NdT0l1MKzJ4m3nPj7LCaRTxUzfs
review:
  thoroughness: medium
  understanding: medium
  rating: positive
comment: |
  Trivial uninhabited type.  LGTM.
  
  No unsafe, no I/O, single lib.rs source file, decent docs.
-----BEGIN CREV PACKAGE REVIEW SIGNATURE-----
DzF2USRezKmZoKst5-T8tZkuqHgJpds0LMbRwaegUpgTEW7nqxtFhROUk2GM7d1qYfkXt_h1EG571kmioYteBw
-----END CREV PACKAGE REVIEW-----

-----BEGIN CREV PACKAGE REVIEW-----
version: -1
date: "2019-08-30T09:14:27.646575400-07:00"
from:
  id-type: crev
  id: 6OZqHXqyUAF57grEY7IVMjRljdd9dgDxiNtr1NF1BdY
  url: "https://github.com/MaulingMonkey/crev-proofs"
package:
  source: "https://crates.io"
  name: memalloc
  version: 0.1.0
  digest: TNURiDE9U7f_yKrlaONv0zgHPnohbmaGtrRiF5o0vx8
review:
  thoroughness: medium
  understanding: medium
  rating: negative
comment: |
  API design is super brittle.  Returning uninitialized memory seems like UB-bait.
  
  Detail
  ======
  
  | File                                          | Rating | Notes |
  | --------------------------------------------- | ------ | ----- |
  | [src/lib.rs](src/lib.rs)                      | -1    | Soundish, but unsafe as heck APIs.
  | .cargo-ok                                     | +1    | |
  | .gitignore                                    | +1    | |
  | .travis.yml                                   | +1    | |
  | Cargo.toml                                    | +1    | |
  | README.md                                     | +1    | |
  
  | Other     | Rating | Notes |
  | --------- | ------ | ----- |
  | unsafe    | -1 | Soundish, but unsafe as heck API design.
  | fs        | +1 | None
  | io        | +1 | None
  | docs      | +1 | |
  | tests     | +1 | |
  
  src/lib.rs
  ----------
  | Line  | What  | Notes |
  | -----:| ----- | ----- |
  | 23    | allocate      | This looks like it returns uninitialized memory (only sizes capacity not actual size).  UB bait.  Unaligned.
  | 38    | reallocate    | Minimal debug checks, constructs Vec from_raw_parts with size when the real vec had size 0.
-----BEGIN CREV PACKAGE REVIEW SIGNATURE-----
anBTUCsO1Ndbb7MXaQbbfONAZTjjPwJGR8T5OoUTQlmieeorIThX0-sWeak3YyI38vT41Y1xLE3MUffhysTJDA
-----END CREV PACKAGE REVIEW-----

